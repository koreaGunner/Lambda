package stream;

public class Stream_study {
    public static void main(String[] args) {
//        스트림이란
//        스트림은 컬렉션에 저장된 요소를 하나씩 꺼낸서 람다식으로 처리하는 반복자이다
//        스트림을 사용하기 위해서는 람다식에 대한 지식이 필요하며 컬렉션, 스레드에 대한 이해도 필요하다
//        java에서 반복자 대표주자는 Iterator(java.util)이다
//        스트림은 java.util.stream 패키지에 속한 인터페이스이다
//
//        스트림과 컬렉션은 집합에 대한 클래스이다
//        컬렉션 요소를 할당하고 관리하는데 목적이 있다면, 스트림은 요소를 검색하거나 값을 처리하는데 목적이 있다

//        스트림의 특징
//        1. 람다식으로 처리 -> 코드가 간결해짐
//        2. 내부 반복자 사용 -> 병렬처리가 쉽다
//        3. 중간처리 및 최종처리(집계) 결과 관리가 쉽다

//        참고 1
//        외부반복자(external iterator)
//        - 컬렉션의 요소를 하나씩 가져오는 코드를 직접 작성하기
//        - 외부 반복자 예시 : for문, iterator를 사용하는 while문
//        - 코딩 : 컬렉션 요소 꺼내는 코드 및 요소를 처리하는 코드 작성
//
//        내부반복자(internal iterator)
//        - 컬렉션 내부에서 코드를 하나씩 꺼내줌
//        - 코딩 : 컬렉션 요소를 처리하는 코드만 작성

//        참고 2
//        병렬처리란
//        병렬처리란 한가지 작업을 여러 스레드가 처리할 수 있도록 여러 작업단위를 나누고 병렬로 처리하는 것을 말한다
//        각 스레드가 처리한 결과는 자동으로 결합해 최종수행결과물이 나온다
//        작업단위로 나눈 부분의 결과가 중간처리결과, 중간처리결과를 합하면 최종처리결과가 나온다

//        참고 3
//        - 중간처리 : 매핑, 필터링, 정렬 등 작업
//        - 최종처리 : 요소 반복, 개수세기, 평균, 합계 등 집계

    }
}
